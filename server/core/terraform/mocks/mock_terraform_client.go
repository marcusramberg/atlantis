// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/core/terraform (interfaces: Client)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	version "github.com/hashicorp/go-version"
	command "github.com/runatlantis/atlantis/server/events/command"
	logging "github.com/runatlantis/atlantis/server/logging"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// EnsureVersion mocks base method.
func (m *MockClient) EnsureVersion(arg0 logging.SimpleLogging, arg1 *version.Version) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureVersion", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureVersion indicates an expected call of EnsureVersion.
func (mr *MockClientMockRecorder) EnsureVersion(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureVersion", reflect.TypeOf((*MockClient)(nil).EnsureVersion), arg0, arg1)
}

// RunCommandWithVersion mocks base method.
func (m *MockClient) RunCommandWithVersion(arg0 command.ProjectContext, arg1 string, arg2 []string, arg3 map[string]string, arg4 *version.Version, arg5 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunCommandWithVersion", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RunCommandWithVersion indicates an expected call of RunCommandWithVersion.
func (mr *MockClientMockRecorder) RunCommandWithVersion(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunCommandWithVersion", reflect.TypeOf((*MockClient)(nil).RunCommandWithVersion), arg0, arg1, arg2, arg3, arg4, arg5)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/events (interfaces: CustomStepRunner)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	command "github.com/runatlantis/atlantis/server/events/command"
)

// MockCustomStepRunner is a mock of CustomStepRunner interface.
type MockCustomStepRunner struct {
	ctrl     *gomock.Controller
	recorder *MockCustomStepRunnerMockRecorder
}

// MockCustomStepRunnerMockRecorder is the mock recorder for MockCustomStepRunner.
type MockCustomStepRunnerMockRecorder struct {
	mock *MockCustomStepRunner
}

// NewMockCustomStepRunner creates a new mock instance.
func NewMockCustomStepRunner(ctrl *gomock.Controller) *MockCustomStepRunner {
	mock := &MockCustomStepRunner{ctrl: ctrl}
	mock.recorder = &MockCustomStepRunnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomStepRunner) EXPECT() *MockCustomStepRunnerMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockCustomStepRunner) Run(arg0 command.ProjectContext, arg1, arg2 string, arg3 map[string]string, arg4 bool) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Run indicates an expected call of Run.
func (mr *MockCustomStepRunnerMockRecorder) Run(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockCustomStepRunner)(nil).Run), arg0, arg1, arg2, arg3, arg4)
}

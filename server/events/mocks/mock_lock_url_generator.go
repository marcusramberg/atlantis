// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/events (interfaces: LockURLGenerator)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLockURLGenerator is a mock of LockURLGenerator interface.
type MockLockURLGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockLockURLGeneratorMockRecorder
}

// MockLockURLGeneratorMockRecorder is the mock recorder for MockLockURLGenerator.
type MockLockURLGeneratorMockRecorder struct {
	mock *MockLockURLGenerator
}

// NewMockLockURLGenerator creates a new mock instance.
func NewMockLockURLGenerator(ctrl *gomock.Controller) *MockLockURLGenerator {
	mock := &MockLockURLGenerator{ctrl: ctrl}
	mock.recorder = &MockLockURLGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLockURLGenerator) EXPECT() *MockLockURLGeneratorMockRecorder {
	return m.recorder
}

// GenerateLockURL mocks base method.
func (m *MockLockURLGenerator) GenerateLockURL(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateLockURL", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GenerateLockURL indicates an expected call of GenerateLockURL.
func (mr *MockLockURLGeneratorMockRecorder) GenerateLockURL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateLockURL", reflect.TypeOf((*MockLockURLGenerator)(nil).GenerateLockURL), arg0)
}

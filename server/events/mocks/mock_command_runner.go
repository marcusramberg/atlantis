// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/events (interfaces: CommandRunner)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	events "github.com/runatlantis/atlantis/server/events"
	models "github.com/runatlantis/atlantis/server/events/models"
)

// MockCommandRunner is a mock of CommandRunner interface.
type MockCommandRunner struct {
	ctrl     *gomock.Controller
	recorder *MockCommandRunnerMockRecorder
}

// MockCommandRunnerMockRecorder is the mock recorder for MockCommandRunner.
type MockCommandRunnerMockRecorder struct {
	mock *MockCommandRunner
}

// NewMockCommandRunner creates a new mock instance.
func NewMockCommandRunner(ctrl *gomock.Controller) *MockCommandRunner {
	mock := &MockCommandRunner{ctrl: ctrl}
	mock.recorder = &MockCommandRunnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommandRunner) EXPECT() *MockCommandRunnerMockRecorder {
	return m.recorder
}

// RunAutoplanCommand mocks base method.
func (m *MockCommandRunner) RunAutoplanCommand(arg0, arg1 models.Repo, arg2 models.PullRequest, arg3 models.User) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RunAutoplanCommand", arg0, arg1, arg2, arg3)
}

// RunAutoplanCommand indicates an expected call of RunAutoplanCommand.
func (mr *MockCommandRunnerMockRecorder) RunAutoplanCommand(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunAutoplanCommand", reflect.TypeOf((*MockCommandRunner)(nil).RunAutoplanCommand), arg0, arg1, arg2, arg3)
}

// RunCommentCommand mocks base method.
func (m *MockCommandRunner) RunCommentCommand(arg0 models.Repo, arg1 *models.Repo, arg2 *models.PullRequest, arg3 models.User, arg4 int, arg5 *events.CommentCommand) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RunCommentCommand", arg0, arg1, arg2, arg3, arg4, arg5)
}

// RunCommentCommand indicates an expected call of RunCommentCommand.
func (mr *MockCommandRunnerMockRecorder) RunCommentCommand(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunCommentCommand", reflect.TypeOf((*MockCommandRunner)(nil).RunCommentCommand), arg0, arg1, arg2, arg3, arg4, arg5)
}

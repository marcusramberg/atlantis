// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/events (interfaces: GithubPullGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	github "github.com/google/go-github/v31/github"
	models "github.com/runatlantis/atlantis/server/events/models"
)

// MockGithubPullGetter is a mock of GithubPullGetter interface.
type MockGithubPullGetter struct {
	ctrl     *gomock.Controller
	recorder *MockGithubPullGetterMockRecorder
}

// MockGithubPullGetterMockRecorder is the mock recorder for MockGithubPullGetter.
type MockGithubPullGetterMockRecorder struct {
	mock *MockGithubPullGetter
}

// NewMockGithubPullGetter creates a new mock instance.
func NewMockGithubPullGetter(ctrl *gomock.Controller) *MockGithubPullGetter {
	mock := &MockGithubPullGetter{ctrl: ctrl}
	mock.recorder = &MockGithubPullGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGithubPullGetter) EXPECT() *MockGithubPullGetterMockRecorder {
	return m.recorder
}

// GetPullRequest mocks base method.
func (m *MockGithubPullGetter) GetPullRequest(arg0 models.Repo, arg1 int) (*github.PullRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPullRequest", arg0, arg1)
	ret0, _ := ret[0].(*github.PullRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPullRequest indicates an expected call of GetPullRequest.
func (mr *MockGithubPullGetterMockRecorder) GetPullRequest(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPullRequest", reflect.TypeOf((*MockGithubPullGetter)(nil).GetPullRequest), arg0, arg1)
}

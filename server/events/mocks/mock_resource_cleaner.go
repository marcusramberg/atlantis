// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/events (interfaces: ResourceCleaner)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	jobs "github.com/runatlantis/atlantis/server/jobs"
)

// MockResourceCleaner is a mock of ResourceCleaner interface.
type MockResourceCleaner struct {
	ctrl     *gomock.Controller
	recorder *MockResourceCleanerMockRecorder
}

// MockResourceCleanerMockRecorder is the mock recorder for MockResourceCleaner.
type MockResourceCleanerMockRecorder struct {
	mock *MockResourceCleaner
}

// NewMockResourceCleaner creates a new mock instance.
func NewMockResourceCleaner(ctrl *gomock.Controller) *MockResourceCleaner {
	mock := &MockResourceCleaner{ctrl: ctrl}
	mock.recorder = &MockResourceCleanerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceCleaner) EXPECT() *MockResourceCleanerMockRecorder {
	return m.recorder
}

// CleanUp mocks base method.
func (m *MockResourceCleaner) CleanUp(arg0 jobs.PullInfo) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CleanUp", arg0)
}

// CleanUp indicates an expected call of CleanUp.
func (mr *MockResourceCleanerMockRecorder) CleanUp(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CleanUp", reflect.TypeOf((*MockResourceCleaner)(nil).CleanUp), arg0)
}

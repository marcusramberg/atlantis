// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runatlantis/atlantis/server/controllers/templates (interfaces: TemplateWriter)

// Package mocks is a generated GoMock package.
package mocks

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTemplateWriter is a mock of TemplateWriter interface.
type MockTemplateWriter struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateWriterMockRecorder
}

// MockTemplateWriterMockRecorder is the mock recorder for MockTemplateWriter.
type MockTemplateWriterMockRecorder struct {
	mock *MockTemplateWriter
}

// NewMockTemplateWriter creates a new mock instance.
func NewMockTemplateWriter(ctrl *gomock.Controller) *MockTemplateWriter {
	mock := &MockTemplateWriter{ctrl: ctrl}
	mock.recorder = &MockTemplateWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTemplateWriter) EXPECT() *MockTemplateWriterMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockTemplateWriter) Execute(arg0 io.Writer, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockTemplateWriterMockRecorder) Execute(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockTemplateWriter)(nil).Execute), arg0, arg1)
}
